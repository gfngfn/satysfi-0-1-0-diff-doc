use package open Stdlib.Logo
use package open StdJaReport

use open Local of `./local`

document (|
  title = {\SATySFi; 0.0.xユーザのための0.1.0-alpha.1手引き},
  author = {Takashi Suwa},
|) '<
  +chapter{はじめに}<
    +p{
      \SATySFi; 0.1.0-alpha.1が1–2ヵ月程度の近いうちにリリースできそうな形になってきたので，
      既に\SATySFi; 0.0.xに馴染んでいるユーザの方々向けに，
      0.0.xと比べてどのような非互換な変更が入るかを共有したいと思います．
    }
  >
  +chapter{言語設計上の非互換な変化}<
    +section{具象構文上の差異}<
      +subsection{リストとレコードの区切り記号}<
        +p{
          リストおよびレコードのリテラルでは，
          区切り記号としてセミコロンではなくコンマが使われるようになります\footnote{
            もともとセミコロンを区切り記号にしていたのは，
            単にOCamlの具象構文に追従したためでした．
            OCamlの場合はタプルに括弧が必須ではなく
            `a, b` と書いただけでタプル扱いとなる構文を採用しており，
            それゆえ `[a, b; c, d]` のようにタプルのリストが簡単に書けるなどの
            或る種の利点らしきものがありましたが，
            \SATySFi;では却ってわかりづらくなることを避けるために
            タプルは括弧を必須としており，
            特にコンマとセミコロンを区別する動機がないため，
            この機会にコンマに揃えることにしました．
          }：

          \compare(|
            old = ```
              [3; 1; 4; 1; 5; 9; 2]
            ```,
            new = ```
              [3, 1, 4, 1, 5, 9, 2]
            ```,
          |);

          \compare(|
            old = ```
              (| foo = 42; bar = `qux` |)
            ```,
            new = ```
              (| foo = 42, bar = `qux` |)
            ```,
          |);

          従来末尾セミコロンが許容されていたのと同様に，いずれも末尾コンマが許容されます．
        }
      >
      +subsection{match式}<
        +p{
          match式は，match式が入れ子になった際のいわゆる「ぶら下がりmatch」による構文上の曖昧性を解消するために，
          `end` というトークンを最後につける構文に変更されます：

          \compare(|
            old = ```
              match opt1 with
              | None ->
                  ( match opt2 with
                    | None     -> y
                    | Some(x2) -> f x2
                  )
              | Some(x1) ->
                  f x1
            ```,
            new = ```
              match opt1 with
              | None ->
                  match opt2 with
                  | None     -> y
                  | Some(x2) -> f x2
                  end
              | Some(x1) ->
                  f x
              end
            ```,
          |);
        }
      >
      +subsection{let open}<
        +p{
          OCamlに倣い，ローカルなモジュールのオープンは先頭に `let` をつけます：

          \compare(|
            old = ```
              open Calc in succ 42
            ```,
            new = ```
              let open Calc in succ 42
            ```,
          |);
        }
      >
    >
    +section{ソースファイルとトップレベル定義}<
    >
    +section{型つけの変更}<
      +subsection{page型の廃止}<
      >
      +subsection{graphics型の変更}<
      >
      +subsection{math-char-class型の拡張}<
      >
      +subsection{数式コマンドの意味論}<
      >
      +subsection{型註釈}<
      >
    >
    +section{レコード型の多相性}<
    >
    +section{モジュールシステム}<
    >
    +section{多段階計算}<
    >
  >
  +chapter{エコシステムSaphe}<
  >
  +chapter{テスト機構}<
  >
  +chapter{今後入りそうな変更}<
  >
>
